// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros mergeWithTemplate, options & inject: mergeWithTemplate, options & inject 1`] = `

import { mergeWithTemplate, options, inject } from '../babel.macro';

class Template extends __UI__.Component {
    constructor( options ) {
        super( options );

        // Create elements
        const div0 = document.createElement( 'div' );
        const text1 = document.createTextNode( '' );

        // Construct dom
        div0.appendChild( document.createTextNode( " Content " ) );
        div0.appendChild( text1 );

        // Update functions
        this.__update__ = {
            text( text ) {
                text1.textContent = text;
            }
        };

        // Set root nodes
        this.nodes = [ div0 ];
    }
}

@mergeWithTemplate
class dummy extends Template {
    @inject logger;

    @options text = 'default text';
    @options get startDate() {
        return new Date();
    }
        
    constructor() {
        super( ...arguments );
        this.logger.log( 'constructor called' ); 
    }
}

      ↓ ↓ ↓ ↓ ↓ ↓

import { DI, configureOptions } from 'sham-ui';


class dummy extends __UI__.Component {
    constructor(options) {
        super(options);

        // Create elements
        const div0 = document.createElement('div');
        const text1 = document.createTextNode('');

        // Construct dom
        div0.appendChild(document.createTextNode(" Content "));
        div0.appendChild(text1);

        // Update functions
        this.__update__ = {
            text(text) {
                text1.textContent = text;
            }
        };

        // Set root nodes
        this.nodes = [div0];

        this.logger.log('constructor called');
    }

    configureOptions() {
        super.configureOptions(...arguments);
        configureOptions(dummy.prototype, this, {
            text: 'default text',
            startDate: {
                get() {
                    return new Date();
                }

            }
        });
    }

    get logger() {
        return DI.resolve('logger');
    }

}

`;

exports[`macros mergeWithTemplate: mergeWithTemplate 1`] = `

import { mergeWithTemplate } from '../babel.macro';

class Template extends __UI__.Component {
    constructor( options ) {
        super( options );

        // Create elements
        const div0 = document.createElement( 'div' );
        const text1 = document.createTextNode( '' );

        // Construct dom
        div0.appendChild( document.createTextNode( " Content " ) );
        div0.appendChild( text1 );

        // Update functions
        this.__update__ = {
            text( text ) {
                text1.textContent = text;
            }
        };

        // Set root nodes
        this.nodes = [ div0 ];
    }
}

@mergeWithTemplate
class dummy extends Template {
    @options text = 'default text';
    @options get startDate() {
        return new Date();
    }
        
    constructor() {
        super( ...arguments );
        console.log( 'constructor called' ); 
    }
}

      ↓ ↓ ↓ ↓ ↓ ↓

class dummy extends __UI__.Component {
    @options
    text = 'default text';

    constructor(options) {
        super(options);

        // Create elements
        const div0 = document.createElement('div');
        const text1 = document.createTextNode('');

        // Construct dom
        div0.appendChild(document.createTextNode(" Content "));
        div0.appendChild(text1);

        // Update functions
        this.__update__ = {
            text(text) {
                text1.textContent = text;
            }
        };

        // Set root nodes
        this.nodes = [div0];

        console.log('constructor called');
    }
    @options
    get startDate() {
        return new Date();
    }

}

`;
